initSidebarItems({"enum":[["EngineError",""]],"fn":[["create_bitmask_from_range",""],["create_bitmask_with_one",""],["enum_variant_eq",""],["get_enum_variant_type_name",""],["get_game_error_message",""],["get_indices_of_set_elements",""],["get_type_name",""],["get_value_type_name",""],["validate_asset_path",""]],"macro":[["define_component_handle",""],["define_new_pill_slotmap_key",""]],"mod":[["bitmask_utils",""],["error",""],["math",""],["pill_slotmap","Contains the slot map implementation."],["pill_twinmap",""],["pill_typemap","A hashmap whose keys are defined by types."],["utils",""]],"struct":[["PillSlotMap",""],["PillSlotMapKeyData",""],["PillTwinMap",""],["PillTypeMap","PillTypeMap is a simple abstraction around the standard libraryâ€™s `HashMap` type, where types are its keys. This allows for statically-checked value retrieval."]],"trait":[["PillSlotMapKey",""],["PillStyle",""],["PillTypeMapKey","PillTypeMapKey is used to declare key types that are eligible for use with `PillTypeMap`."]],"type":[["Color",""],["Matrix3f",""],["Vector2f",""],["Vector2i",""],["Vector3f",""],["Vector3i",""]]});